{"version":3,"sources":["logo.svg","store/states/users.state.js","store/action-creators/users.action-creators.js","store/reducers/app.reducer.js","store/reducers/users.reducer.js","store/states/app.state.js","store/main.js","components/user-list/user-list.js","constants.js","store/actions/users.actions.js","components/user-edit/user-edit.js","components/app/app.js","index.js"],"names":["module","exports","initialUsersState","userList","selectedUser","usersFetched","usersFetchingError","userUpdated","userUpdatingError","UserActions","Object","freeze","SetUsers","SetSelectedUser","SetUsersFetched","SetUsersFetchingError","SetUserUpdatingError","UpdateUser","UpdateUserSuccessful","UpdateUserFailed","setSelectedUserAction","user","type","payload","setUsersFetchedAction","fetched","setUserUpdateAction","values","setUserUpdatingErrorAction","failed","setUserUpdatingSuccessfulAction","done","appReducers","combineReducers","users","state","action","map","id","updated_at","Date","initialAppState","middlewares","thunk","store","createStore","applyMiddleware","UserList","props","searchText","searchTextChange","bind","this","getUsers","length","event","setState","target","value","selectUser","columns","name","selector","sortable","cell","item","onClick","className","uk-tooltip","filteredUsers","filter","single","lowerCasedSearch","toLowerCase","indexOf","email","bio","occupation","uk-spinner","uk-alert","uk-grid","onChange","autoFocus","placeholder","noHeader","pagination","paginationRowsPerPageOptions","defaultSortField","striped","data","moment","created_at","format","to","Component","connect","dispatch","a","async","fetch","res","status","json","Validator","require","UserEdit","val","check","compile","trim","normalize","submitting","nameInputChange","emailInputChange","occupationInputChange","bioInputChange","formSubmit","updateUserSuccessful","updateUserError","window","UIkit","modal","document","getElementById","hide","prevProps","prevState","snapshot","userUpdatingSuccessful","show","preventDefault","stateClone","assign","Array","isArray","console","warn","notification","message","updateUser","occupationList","from","Set","index","key","onSubmit","defaultValue","rows","disabled","uk-modal","updates","replace","method","headers","body","JSON","stringify","err","App","uk-navbar","src","logo","alt","exact","path","component","render"],"mappings":"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","file":"static/js/main.fd04dd4c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const initialUsersState = {\n    userList: [],\n    selectedUser: null,\n    usersFetched: false,\n    usersFetchingError: false,\n    userUpdated: false,\n    userUpdatingError: false\n};\n","export const UserActions = Object.freeze({\n    SetUsers: '[Users] Set users',\n    SetSelectedUser: '[Users] Set selected user',\n    SetUsersFetched: '[Users] Set users fetched',\n    SetUsersFetchingError: '[Users] Set users fetching error',\n    SetUserUpdatingError: '[Users] Set user updating error',\n    UpdateUser: '[Users] update user',\n    UpdateUserSuccessful: '[User] update user successful',\n    UpdateUserFailed: '[Users] update user failed'\n});\n\nexport function setUsersAction(users) {\n    return {\n        type: UserActions.SetUsers,\n        payload: users\n    };\n}\n\nexport function setSelectedUserAction(user) {\n    return {\n        type: UserActions.SetSelectedUser,\n        payload: user\n    };\n}\n\nexport function setUsersFetchedAction(fetched) {\n    return {\n        type: UserActions.SetUsersFetched,\n        payload: fetched\n    };\n}\n\nexport function setUsersFetchingErrorAction(failed) {\n    return {\n        type: UserActions.SetUsersFetchingError,\n        payload: failed\n    };\n}\n\nexport function setUserUpdateAction(user, values) {\n    return {\n        type: UserActions.UpdateUser,\n        user: user,\n        payload: values\n    };\n}\n\nexport function setUserUpdatingErrorAction(failed) {\n    return {\n        type: UserActions.UpdateUserFailed,\n        payload: failed\n    };\n}\n\nexport function setUserUpdatingSuccessfulAction(done) {\n    return {\n        type: UserActions.UpdateUserSuccessful,\n        payload: done\n    };\n}\n","import { combineReducers } from \"redux\";\n\nimport usersReducer from \"./users.reducer\";\n\nconst appReducers = combineReducers({\n    users: usersReducer\n});\n\nexport default appReducers;\n","import { initialUsersState } from \"../states/users.state\";\nimport { UserActions } from \"../action-creators/users.action-creators\";\n\nexport default function usersReducer(state = initialUsersState, action) {\n    switch (action.type) {\n        case UserActions.SetUsers: {\n            return {\n                ...state,\n                userList: action.payload\n            };\n        }\n        \n        case UserActions.SetSelectedUser: {\n            return {\n                ...state,\n                selectedUser: action.payload\n            };\n        }\n\n        case UserActions.SetUsersFetched: {\n            return {\n                ...state,\n                usersFetched: action.payload\n            };\n        }\n\n        case UserActions.SetUsersFetchingError: {\n            return {\n                ...state,\n                usersFetchingError: action.payload\n            };\n        }\n\n        case UserActions.UpdateUser: {\n            return {\n                ...state,\n                userList: state.userList.map(user => {\n                    if (user.id === action.user.id) {\n                        return {\n                            ...user,\n                            ...action.payload,\n                            updated_at: new Date()\n                        };\n                    }\n\n                    return user;\n                })\n            };\n        }\n\n        case UserActions.UpdateUserFailed: {\n            return {\n                ...state,\n                userUpdatingError: action.payload\n            };\n        }\n        \n        case UserActions.UpdateUserSuccessful: {\n            return {\n                ...state,\n                userUpdated: action.payload\n            };\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n","import {initialUsersState} from \"./users.state\";\n\nexport const initialAppState = {\n    users: initialUsersState\n};\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from 'redux-thunk';\n\nimport appReducers from \"./reducers/app.reducer\";\nimport { initialAppState } from './states/app.state';\n\nconst middlewares = [thunk];\n\nconst store = createStore(appReducers, initialAppState, applyMiddleware(...middlewares));\n\nexport default store;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport DataTable from 'react-data-table-component';\nimport * as moment from 'moment';\nimport { Link } from 'react-router-dom';\n\nimport { setSelectedUserAction } from '../../store/action-creators/users.action-creators';\nimport { getUsers } from '../../store/actions/users.actions';\nimport { dateFormat } from '../../constants';\n\nclass UserList extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchText: ''\n        };\n\n        this.searchTextChange = this.searchTextChange.bind(this);\n    }\n\n    componentDidMount() {\n        const { users, usersFetched, getUsers } = this.props;\n\n        if (!users.length && !usersFetched) {\n            getUsers();\n        }\n    }\n\n    searchTextChange(event) {\n        this.setState({ searchText: event.target.value });\n    }\n    \n    render() {\n        let { selectedUser, users, selectUser, usersFetched, usersFetchingError } = this.props\n        const columns = [\n            {\n                name: 'Name',\n                selector: 'name',\n                sortable: true\n            },\n            {\n                name: 'Email',\n                selector: 'email',\n                sortable: true\n            },\n            {\n                name: 'Occupation',\n                selector: 'occupation',\n                sortable: true\n            },\n            {\n                name: 'Actions',\n                cell: item => (\n                    <button\n                        onClick={() => selectUser(item)}\n                        className=\"uk-button uk-button-primary uk-button-small uk-text-capitalize uk-margin-small-right\"\n                        uk-tooltip=\"Click to view user information on the right side panel\">View\n                    </button>\n                )\n            }\n        ];\n\n        const filteredUsers = users.filter(single => {\n            const lowerCasedSearch = this.state.searchText.toLowerCase();\n            \n            return (single.name.toLowerCase().indexOf(lowerCasedSearch) +\n                single.email.toLowerCase().indexOf(lowerCasedSearch) +\n                single.bio.toLowerCase().indexOf(lowerCasedSearch) +\n                single.occupation.toLowerCase().indexOf(lowerCasedSearch)) >= 0\n        });\n\n        const TableComponent = () => (\n            <div className=\"uk-grid-medium\" uk-grid=\"\">\n                    <div className=\"uk-width-2-3\">\n                    <input type=\"text\" value={this.state.searchText} onChange={this.searchTextChange} autoFocus className=\"uk-input uk-input-small\" placeholder={'Search ' + users.length + ' users by name, email, bio and occupation'} />\n                        <DataTable\n                            noHeader={true}\n                            columns={columns}\n                            pagination={true}\n                            paginationRowsPerPageOptions={[10,20,30,50]}\n                            defaultSortField=\"id\"\n                            striped={true}\n                            data={filteredUsers} />\n                    </div>\n                    <div className=\"uk-width-expand\">\n                        <div className=\"uk-card uk-card-small uk-card-default\">\n                            <div className=\"uk-card-header\">\n                                <h3 className=\"uk-card-title\">View selected user information</h3>\n                            </div>\n                            {\n                                selectedUser ?\n                                <div className=\"uk-card-body\">\n                                    <p className=\"uk-text-bold uk-margin-remove-bottom\">Name:</p>\n                                    <p className=\"uk-text-muted uk-margin-remove-top\">{selectedUser.name}</p>\n                                    \n                                    <p className=\"uk-text-bold uk-margin-remove-bottom\">Email:</p>\n                                    <p className=\"uk-text-muted uk-margin-remove-top\">{selectedUser.email}</p>\n                                    \n                                    <p className=\"uk-text-bold uk-margin-remove-bottom\">Occupation:</p>\n                                    <p className=\"uk-text-muted uk-margin-remove-top\">{selectedUser.occupation}</p>\n                                    \n                                    <p className=\"uk-text-bold uk-margin-remove-bottom\">Bio:</p>\n                                    <p className=\"uk-text-muted uk-margin-remove-top\">{selectedUser.bio}</p>\n                                    \n                                    <p className=\"uk-text-bold uk-margin-remove-bottom\">Created At:</p>\n                                    <p className=\"uk-text-muted uk-margin-remove-top\">{moment(selectedUser.created_at).format(dateFormat)}</p>\n                                    \n                                    <p className=\"uk-text-bold uk-margin-remove-bottom\">Updated At:</p>\n                                    <p className=\"uk-text-muted uk-margin-remove-top\">{moment(selectedUser.updated_at).format(dateFormat)}</p>\n\n                                    <Link to=\"/user\" className=\"uk-button uk-button-secondary uk-margin\">Edit</Link>\n                                </div>\n                                :\n                                <div className=\"uk-card-body uk-flex uk-flex-middle uk-flex-center\">\n                                    <p className=\"uk-text-muted\">No user selected</p>\n                                </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n        );\n\n        return (\n            <div id=\"viewing\">\n                <h2 className=\"uk-heading\">View and manage users</h2>\n                { !usersFetched &&\n                    <div className=\"uk-flex uk-flex-center uk-margin-medium\">\n                        <div uk-spinner=\"ratio: 3\" />\n                    </div>\n                }\n\n                {\n                    usersFetched && usersFetchingError &&\n                    <div className=\"uk-alert-danger\" uk-alert=\"\">\n                        <p>This was not supposed to happen. Sometimes when an error occurs, user always blames the developer. So before you do that, try to make sure the problem is not on your side first!</p>\n                        <p>Try refreshing this page also to see if the problem goes away.</p>\n                    </div>\n                }\n\n                {\n                    usersFetched && !usersFetchingError &&\n                    <div>\n                        <h4 className=\"uk-heading\">{'Showing ' + users.length + ' users'}</h4>\n                        <TableComponent />\n                    </div>\n                }\n            </div>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    return {\n        users: state.users.userList,\n        usersFetched: state.users.usersFetched,\n        usersFetchingError: state.users.usersFetchingError,\n        selectedUser: state.users.selectedUser\n    };\n}\n\nfunction matchDispatchToProps(dispatch) {\n    return {\n        getUsers() {\n            return dispatch(getUsers());\n        },\n        selectUser(user) {\n            return dispatch(setSelectedUserAction(user));\n        }\n    };\n}\n\nexport default connect(mapStateToProps, matchDispatchToProps)(UserList)","export const fetchUsersUrl = 'https://ti-react-test.herokuapp.com/users';\n\nexport const updateUsersUrl = 'https://ti-react-test.herokuapp.com/users/{id}';\n\nexport const dateFormat = 'DD MMM, YYYY HH:mm';","import { fetchUsersUrl, updateUsersUrl } from '../../constants';\nimport {\n    setUsersAction,\n    setUsersFetchedAction,\n    setUsersFetchingErrorAction,\n    setSelectedUserAction,\n    setUserUpdateAction,\n    setUserUpdatingErrorAction,\n    setUserUpdatingSuccessfulAction\n} from '../action-creators/users.action-creators';\n\nexport function getUsers() {\n    return async dispatch => {\n        try {\n            const res = await fetch(fetchUsersUrl);\n\n            if (res.status >= 400) {\n                throw res;\n            }\n            \n            const data = await res.json();\n            dispatch(setUsersAction(data));\n            dispatch(setUsersFetchedAction(true));\n        }\n        catch (err) {\n            dispatch(setUsersFetchingErrorAction(true));\n            dispatch(setUsersFetchedAction(true));\n        }\n    };\n}\n\nexport function updateUser(user, updates) {\n    return async dispatch => {\n        try {\n            const res = await fetch(updateUsersUrl.replace('{id}', user.id), {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(updates)\n            });\n\n            if (res.status >= 400) {\n                throw res;\n            }\n\n            dispatch(setUserUpdatingSuccessfulAction(true));\n\n            dispatch(setUserUpdateAction(user, updates));\n\n            dispatch(setSelectedUserAction({\n                ...user,\n                ...updates,\n                updated_at: new Date()\n            }));\n        } catch (err) {\n            dispatch(setUserUpdatingErrorAction(true));\n        }\n    }\n}\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { updateUser } from '../../store/actions/users.actions';\nimport { setUserUpdatingErrorAction, setUserUpdatingSuccessfulAction } from '../../store/action-creators/users.action-creators';\n\nlet Validator = require(\"fastest-validator\");\n\nclass UserEdit extends Component {\n\n    constructor(props) {\n        super(props);\n\n        const { selectedUser } = props;\n\n        const val = new Validator();\n\n        const schema = {\n            name: { type: 'string', trim: true },\n            email: { type: 'email', normalize: true },\n            occupation: { type: 'string' },\n            bio: { type: 'string', trim: true }\n        };\n\n        this.check = val.compile(schema);\n\n        this.state = {\n            name: selectedUser.name,\n            email: selectedUser.email,\n            occupation: selectedUser.occupation,\n            bio: selectedUser.bio,\n            submitting: false\n        };\n\n        this.nameInputChange = this.nameInputChange.bind(this);\n        this.emailInputChange = this.emailInputChange.bind(this);\n        this.occupationInputChange = this.occupationInputChange.bind(this);\n        this.bioInputChange = this.bioInputChange.bind(this);\n        this.formSubmit = this.formSubmit.bind(this);\n    }\n\n    componentWillUnmount() {\n        this.props.updateUserSuccessful(false);\n        this.props.updateUserError(false);\n\n        window.UIkit.modal(document.getElementById('modal-success')).hide();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (!prevProps.userUpdatingSuccessful && this.props.userUpdatingSuccessful) {\n            window.UIkit.modal(document.getElementById('modal-success')).show();\n\n            this.setState({ submitting: false });\n        }\n        \n        if (!prevProps.userUpdatingError && this.props.userUpdatingError) {\n            this.setState({ submitting: false });\n        }\n    }\n\n    nameInputChange(event) {\n        this.setState({ name: event.target.value });\n    }\n\n    emailInputChange(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    occupationInputChange(event) {\n        this.setState({ occupation: event.target.value });\n    }\n\n    bioInputChange(event) {\n        this.setState({ bio: event.target.value });\n    }\n\n    formSubmit(event) {\n        event.preventDefault();\n\n        this.setState({ submitting: true });\n\n        this.props.updateUserSuccessful(false);\n        this.props.updateUserError(false);\n\n        const stateClone = Object.assign({}, this.state);\n\n        if (Array.isArray(this.check(stateClone))) {\n            console.warn(this.check(stateClone));\n            window.UIkit.notification({message: 'Please rectify your input(s) first!', status: 'danger'})\n\n            return;\n        }\n\n        this.props.updateUser(this.props.selectedUser, stateClone);\n    }\n\n    render() {\n        const { selectedUser, userList, userUpdatingError } = this.props;\n\n        const occupationList = Array.from(new Set(userList.map(item => item.occupation))).map((item, index) => {\n            return <option key={index} value={item}>{item}</option>\n        });\n\n        return (\n            <div>\n                <h2 className=\"uk-heading\">Edit a user</h2>\n                {\n                    userUpdatingError &&\n                    (\n                        <div className=\"uk-alert-danger\" uk-alert=\"\">\n                            <p>Oops! An unexpected error occured while committing your updates, please try again after sometime.</p>\n                        </div>\n                    )\n                }\n                <div className=\"uk-card uk-card-default\">\n                    <div className=\"uk-card-header\">\n                        <h3>User with ID &lt;{selectedUser.id}&gt;</h3>\n                    </div>\n\n                    <div className=\"uk-card-body\">\n                        <form onSubmit={this.formSubmit} className=\"uk-form-stacked\">\n                            <div className=\"uk-margin\">\n                                <label className=\"uk-form-label\">Name:</label>\n                                <input type=\"text\" value={this.state.name} onChange={this.nameInputChange} className=\"uk-input\" />\n                            </div>\n\n                            <div className=\"uk-margin\">\n                                <label className=\"uk-form-label\">Email:</label>\n                                <input type=\"text\" value={this.state.email} onChange={this.emailInputChange} className=\"uk-input\" />\n                            </div>\n\n                            <div className=\"uk-margin\">\n                                <label className=\"uk-form-label\">Occupation:</label>\n                                <select defaultValue={selectedUser.occupation} onChange={this.occupationInputChange} className=\"uk-select\">{occupationList}</select>\n                            </div>\n\n                            <div className=\"uk-margin\">\n                                <label className=\"uk-form-label\">Bio:</label>\n                                <textarea value={this.state.bio} onChange={this.bioInputChange} className=\"uk-textarea\" rows=\"5\" />\n                            </div>\n\n                            <div className=\"uk-margin\">\n                                <button disabled={this.state.submitting} type=\"submit\" className=\"uk-button uk-button-secondary uk-margin-right\">Update</button>\n                                <Link to=\"/\" className=\"uk-button uk-button-default uk-margin-left\">Cancel</Link>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n\n                <div id=\"modal-success\" uk-modal=\"esc-close: false; bg-close: false\">\n                    <div className=\"uk-modal-dialog uk-modal-body\">\n                        <h2 className=\"uk-modal-title\">Success</h2>\n                        <p>User details were successfully updated!</p>\n                        <p className=\"uk-text-right\">\n                            <button className=\"uk-button uk-button-default uk-modal-close\" type=\"button\">Edit Again</button>\n                            <Link to=\"/\" className=\"uk-button uk-button-primary\" type=\"button\">Back</Link>\n                        </p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    return {\n        userList: state.users.userList,\n        selectedUser: state.users.selectedUser,\n        userUpdatingError: state.users.userUpdatingError,\n        userUpdatingSuccessful: state.users.userUpdated\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateUser(user, updates) {\n            return dispatch(updateUser(user, updates));\n        },\n        updateUserError(err) {\n            return dispatch(setUserUpdatingErrorAction(err));\n        },\n        updateUserSuccessful(done) {\n            return dispatch(setUserUpdatingSuccessfulAction(done));\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserEdit);\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport UserList from '../user-list/user-list';\nimport UserEdit from '../user-edit/user-edit';\nimport logo from '../../logo.svg';\n\nclass App extends Component {\n    \n    render() {\n        const { user } = this.props;\n\n        return(\n            <div id=\"root-component\" className=\"uk-flex uk-flex-between uk-flex-column\">\n                <div>\n                    <nav id=\"header\" className=\"uk-navbar-container uk-navbar-transparent uk-background-secondary\" uk-navbar=\"\">\n                        <div className=\"uk-navbar-left uk-padding-small\">\n                            <img className=\"logo\" src={logo} alt=\"Logo\" />\n                        </div>\n                    </nav>\n                    <div className=\"uk-padding\">\n                        <Router>\n                            <Switch>\n                                <Route exact path=\"/\" component={UserList} />\n                                <Route exact path=\"/user\" render={props => !!user ? <UserEdit /> : <Redirect to=\"/\" />} />\n                            </Switch>\n                        </Router>\n                    </div>\n                </div>\n                <div>\n                    <nav id=\"footer\" className=\"uk-navbar-container uk-navbar-transparent uk-background-secondary\" uk-navbar=\"\">\n                        <div className=\"uk-navbar-left uk-padding\">\n                            <img className=\"logo\" src={logo} alt=\"Logo\" />\n                        </div>\n                    </nav>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.users.selectedUser\n    };\n}\n\nexport default connect(mapStateToProps)(App);","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store/main';\nimport './index.css';\nimport App from './components/app/app'\n\nrender((\n    <Provider store={store}>\n        <App />\n    </Provider>\n), document.getElementById('root'));\n\n"],"sourceRoot":""}